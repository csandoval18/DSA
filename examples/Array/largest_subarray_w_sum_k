def longestSubarrayWithSumK(a: [int], k: int) -> int:
  n = len(a)
  max_len = float('-inf')
  
  for i in range(n):
    print("i:" ,i)
    curr_sum = 0
    for j in range(i,n):
      print("j:" ,j)
      curr_sum += a[j]
      print("curr sum:", curr_sum)
      if curr_sum == k:
        max_len = max(max_len, (j+1)-(i+1))
  
  return max_len
      
a = [1,2,3,1,1,1,1]
# a = [2,2,4,1,2]
k = 3
print(longestSubarrayWithSumK(a, k))
      


# Find longest subarray, totally useless, the longest len subarray = len(array)
def longestSubarray(a: [int]) -> int:
  max_len = 0
  n = len(a)
  
  for i in range(n):
    for j in range(i,n):
      subarr_len = (j-i) + 1 # + 1 to remove 0 index start   
      max_len = max(max_len, subarr_len)
  return max_len
      
      
nums = [1,2,3,4,5]
# print(longestSubarray(nums))